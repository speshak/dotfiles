-- Bootstrap
local lazypath = vim.fn.stdpath("data") .. "/lazy/lazy.nvim"
if not vim.loop.fs_stat(lazypath) then
  vim.fn.system({
    "git",
    "clone",
    "--filter=blob:none",
    "https://github.com/folke/lazy.nvim.git",
    "--branch=stable", -- latest stable release
    lazypath,
  })
end
vim.opt.rtp:prepend(lazypath)

-- Configure packer
return require('lazy').setup({

  -- General plugins
  'tpope/vim-fugitive',
  'tpope/vim-surround',
  'cohama/lexima.vim',
  'ntpeters/vim-better-whitespace',
  {'nathanaelkane/vim-indent-guides',
    config = function()
      vim.g.indent_guides_start_level = 2
      vim.cmd([[
        hi IndentGuidesOdd  ctermbg=black
        hi IndentGuidesEven ctermbg=darkgrey
      ]])
    end
  },

  'ConradIrwin/vim-bracketed-paste',
  'sheerun/vim-polyglot',
  'mbbill/undotree',
  'machakann/vim-highlightedyank',
  'tpope/vim-commentary',
  'tpope/vim-speeddating',
  'AndrewRadev/splitjoin.vim',

  {'dkarter/bullets.vim',
    config = function()
      vim.g.bullets_enabled_file_types = {
        'markdown', 'text', 'gitcommit', 'scratch'
      }
    end
  },
  'antoyo/vim-licenses',
  'folke/todo-comments.nvim',

  -- Lang Server
  {'neoclide/coc.nvim',
    dependencies = {'vim-airline/vim-airline'},
    config = function(plugin)
      require("coc")
    end,
    branch = 'release'
  },

  {'vim-syntastic/syntastic',
    config = function(plugin)
      require("syntastic")
    end
  },

  -- User Interface
  'scrooloose/nerdtree',
  'ctrlpvim/ctrlp.vim',
  {'vim-airline/vim-airline',
    config = function(plugin)
      vim.g.airline_powerline_fonts = 1
    end
  },
  {'lewis6991/gitsigns.nvim',
    config = function(plugin)
      require('gitsigns').setup {
        attach_to_untracked = false,
        numhl = true,
        signcolumn = false,
        diff_opts = {
          internal = true,
          linematch = 2,
        },
        on_attach = function(buffer)
          local gs = package.loaded.gitsigns

          local function map(mode, l, r, desc)
            vim.keymap.set(mode, l, r, { buffer = buffer, desc = desc })
          end

          -- stylua: ignore start
          map("n", "]h", gs.next_hunk, "Next Hunk")
          map("n", "[h", gs.prev_hunk, "Prev Hunk")
          map({ "n", "v" }, "<leader>ghs", ":Gitsigns stage_hunk<CR>", "Stage Hunk")
          map({ "n", "v" }, "<leader>ghr", ":Gitsigns reset_hunk<CR>", "Reset Hunk")
          map("n", "<leader>ghS", gs.stage_buffer, "Stage Buffer")
          map("n", "<leader>ghu", gs.undo_stage_hunk, "Undo Stage Hunk")
          map("n", "<leader>ghR", gs.reset_buffer, "Reset Buffer")
          map("n", "<leader>ghp", gs.preview_hunk, "Preview Hunk")
          map("n", "<leader>ghb", function() gs.blame_line({ full = true }) end, "Blame Line")
          map("n", "<leader>ghd", gs.diffthis, "Diff This")
          map("n", "<leader>ghD", function() gs.diffthis("~") end, "Diff This ~")
          map({ "o", "x" }, "ih", ":<C-U>Gitsigns select_hunk<CR>", "GitSigns Select Hunk")
        end,
      }
    end
  },

  -- Speed up loading/set custom filetypes
  -- See https://github.com/nathom/filetype.nvim#customization for info on
  -- setting custom types
  'nathom/filetype.nvim',

  'ryanoasis/vim-devicons',
  'rhysd/committia.vim',

  -- Skeletons and snippets
  {'pgilad/vim-skeletons',
    dependencies = {'SirVer/ultisnips'},
    config = function(plugin)
      vim.cmd("let skeletons#autoRegister = 1")
    end
  },
  {'SirVer/ultisnips',
    dependencies = {'honza/vim-snippets'}
  },

  {{- if ne .environment "work" }}
  'github/copilot.vim',
  {{- end }}

  -- Python
  'majutsushi/tagbar',
  'psf/black',

  -- (Java|Type)Script
  'Quramy/tsuquyomi',
  'Quramy/vim-js-pretty-template',
  'leafgarland/typescript-vim',

  -- Dev Ops stuff
  'digitalrounin/vim-yaml-folds',
  {'hashivim/vim-terraform',
    config = function(plugin)
      vim.cmd([[silent! autocmd! filetypedetect BufRead,BufNewFile *.tf]])
      vim.cmd([[autocmd BufRead,BufNewFile *.hcl set filetype=hcl]])
      vim.cmd([[autocmd BufRead,BufNewFile .terraformrc,terraform.rc set filetype=hcl]])
      vim.cmd([[autocmd BufRead,BufNewFile *.tf,*.tfvars set filetype=terraform]])
      vim.cmd([[autocmd BufRead,BufNewFile *.tfstate,*.tfstate.backup set filetype=json]])

      vim.g.terraform_fmt_on_save = 1
      vim.g.terraform_align = 1
    end
  },
  'juliosueiras/vim-terraform-completion',
  'speshak/vim-cfn',
  'hashicorp/sentinel.vim',

  'ynkdir/vim-vimlparser',
  'syngan/vim-vimlint',

  -- Optimiser
  "lewis6991/impatient.nvim",
})

-- vim:ft=lua
